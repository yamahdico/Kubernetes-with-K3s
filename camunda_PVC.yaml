apiVersion: v1
kind: ConfigMap
metadata:
  name: camunda-config
data:
  camunda.cfg.xml: |
    <camunda-bpm-configuration xmlns="http://camunda.org/schema/1.0/engine">
      <properties>
        <property name="camunda.bpm.webapp.csrf.enabled" value="false"/>
        <property name="camunda.bpm.password-hash-algorithm" value="SHA-512"/>
        <property name="camunda.bpm.webapp.authentication.enabled" value="false"/>
      </properties>
    </camunda-bpm-configuration>
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          env:
            - name: POSTGRES_USER
              value: camunda
            - name: POSTGRES_PASSWORD
              value: camunda
            - name: POSTGRES_DB
              value: camunda
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: camunda
spec:
  selector:
    app: camunda
  ports:
    - protocol: TCP
      port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: camunda
spec:
  replicas: 2
  selector:
    matchLabels:
      app: camunda
  template:
    metadata:
      labels:
        app: camunda
    spec:
      containers:
        - name: camunda
          image: camunda/camunda-bpm-platform:latest
          env:
            - name: DB_DRIVER
              value: org.postgresql.Driver
            - name: DB_URL
              value: jdbc:postgresql://postgres:5432/camunda
            - name: DB_USERNAME
              value: camunda
            - name: DB_PASSWORD
              value: camunda
            - name: CAMUNDA_WEBAPP_CSRF_ENABLED
              value: "false"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: camunda-config
              mountPath: /camunda/conf
      volumes:
        - name: camunda-config
          configMap:
            name: camunda-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }

    http {
      upstream camunda {
        server camunda:8080;
      }

      server {
        listen 80;

        location / {
          proxy_pass http://camunda;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config


